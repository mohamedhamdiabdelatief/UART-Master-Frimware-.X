

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 16 13:15:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0019                     _TXREG	set	25
   169  00C7                     _SPEN	set	199
   170  0099                     _SPBRG	set	153
   171  04C1                     _TRMT	set	1217
   172  04C5                     _TXEN	set	1221
   173  043F                     _TRISC7	set	1087
   174  043E                     _TRISC6	set	1086
   175  04C4                     _SYNC	set	1220
   176  04C2                     _BRGH	set	1218
   177                           
   178                           	psect	strings
   179  0003                     __pstrings:
   180  0003                     stringtab:
   181  0003                     __stringtab:
   182  0003                     stringcode:	
   183                           ;	String table - string pointers are 1 byte each
   184                           
   185  0003                     stringdir:
   186  0003  3000               	movlw	high stringdir
   187  0004  008A               	movwf	10
   188  0005  0804               	movf	4,w
   189  0006  0A84               	incf	4,f
   190  0007  0782               	addwf	2,f
   191  0008                     __stringbase:
   192  0008  3400               	retlw	0
   193  0009                     __end_of__stringtab:
   194  0009                     STR_2:
   195  0009  3441               	retlw	65	;'A'
   196  000A  3454               	retlw	84	;'T'
   197  000B  342B               	retlw	43	;'+'
   198  000C  3443               	retlw	67	;'C'
   199  000D  3457               	retlw	87	;'W'
   200  000E  3451               	retlw	81	;'Q'
   201  000F  3441               	retlw	65	;'A'
   202  0010  3450               	retlw	80	;'P'
   203  0011  3400               	retlw	0
   204  0012                     STR_3:
   205  0012  3441               	retlw	65	;'A'
   206  0013  3454               	retlw	84	;'T'
   207  0014  342B               	retlw	43	;'+'
   208  0015  3452               	retlw	82	;'R'
   209  0016  3453               	retlw	83	;'S'
   210  0017  3454               	retlw	84	;'T'
   211  0018  3400               	retlw	0
   212  0019                     STR_1:
   213  0019  3441               	retlw	65	;'A'
   214  001A  3454               	retlw	84	;'T'
   215  001B  3400               	retlw	0
   216                           
   217                           	psect	cinit
   218  07FC                     start_initialization:	
   219                           ; #config settings
   220                           
   221  07FC                     __initialization:
   222  07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225  07FC                     __end_of__initialization:
   226  07FC  0183               	clrf	3
   227  07FD  120A  118A  2FBA   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	cstackCOMMON
   230  0070                     __pcstackCOMMON:
   231  0070                     ?_UART_TX_Init:
   232  0070                     ??_UART_TX_Init:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_UART_Write_String:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_main:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_UART_Write:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ??_UART_Write:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     UART_Write@data:	
   248                           ; 1 bytes @ 0x0
   249                           
   250                           
   251                           ; 1 bytes @ 0x0
   252  0070                     	ds	1
   253  0071                     ??_UART_Write_String:
   254  0071                     UART_Write_String@i:	
   255                           ; 1 bytes @ 0x1
   256                           
   257                           
   258                           ; 2 bytes @ 0x1
   259  0071                     	ds	2
   260  0073                     UART_Write_String@text:
   261                           
   262                           ; 1 bytes @ 0x3
   263  0073                     	ds	1
   264  0074                     ??_main:
   265                           
   266                           ; 1 bytes @ 0x4
   267  0074                     	ds	3
   268                           
   269                           	psect	maintext
   270  07BA                     __pmaintext:	
   271 ;;
   272 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   273 ;;
   274 ;; *************** function _main *****************
   275 ;; Defined at:
   276 ;;		line 16 in file "uart_tx.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : B00/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   290 ;;      Params:         0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0
   292 ;;      Temps:          3       0       0       0       0
   293 ;;      Totals:         3       0       0       0       0
   294 ;;Total ram usage:        3 bytes
   295 ;; Hardware stack levels required when called:    2
   296 ;; This function calls:
   297 ;;		_UART_TX_Init
   298 ;;		_UART_Write_String
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           
   305                           ;psect for function _main
   306  07BA                     _main:
   307  07BA                     l695:	
   308                           ;incstack = 0
   309                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   310                           
   311                           
   312                           ;uart_tx.c: 18:   UART_TX_Init();
   313  07BA  120A  118A  2788  120A  118A  	fcall	_UART_TX_Init
   314  07BF                     l697:
   315                           
   316                           ;uart_tx.c: 20:   UART_Write_String("AT");
   317  07BF  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   318  07C0  120A  118A  2795  120A  118A  	fcall	_UART_Write_String
   319  07C5                     l699:
   320                           
   321                           ;uart_tx.c: 21:   _delay((unsigned long)((1000)*(4000000/4000.0)));
   322  07C5  3006               	movlw	6
   323  07C6  00F6               	movwf	??_main+2
   324  07C7  3013               	movlw	19
   325  07C8  00F5               	movwf	??_main+1
   326  07C9  30AD               	movlw	173
   327  07CA  00F4               	movwf	??_main
   328  07CB                     u47:
   329  07CB  0BF4               	decfsz	??_main,f
   330  07CC  2FCB               	goto	u47
   331  07CD  0BF5               	decfsz	??_main+1,f
   332  07CE  2FCB               	goto	u47
   333  07CF  0BF6               	decfsz	??_main+2,f
   334  07D0  2FCB               	goto	u47
   335  07D1  2FD2               	nop2
   336  07D2                     l701:
   337                           
   338                           ;uart_tx.c: 22:   UART_Write_String("AT+CWQAP");
   339  07D2  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   340  07D3  120A  118A  2795  120A  118A  	fcall	_UART_Write_String
   341  07D8                     l703:
   342                           
   343                           ;uart_tx.c: 23:   _delay((unsigned long)((1000)*(4000000/4000.0)));
   344  07D8  3006               	movlw	6
   345  07D9  00F6               	movwf	??_main+2
   346  07DA  3013               	movlw	19
   347  07DB  00F5               	movwf	??_main+1
   348  07DC  30AD               	movlw	173
   349  07DD  00F4               	movwf	??_main
   350  07DE                     u57:
   351  07DE  0BF4               	decfsz	??_main,f
   352  07DF  2FDE               	goto	u57
   353  07E0  0BF5               	decfsz	??_main+1,f
   354  07E1  2FDE               	goto	u57
   355  07E2  0BF6               	decfsz	??_main+2,f
   356  07E3  2FDE               	goto	u57
   357  07E4  2FE5               	nop2
   358  07E5                     l705:
   359                           
   360                           ;uart_tx.c: 24:   UART_Write_String("AT+RST");
   361  07E5  300A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   362  07E6  120A  118A  2795  120A  118A  	fcall	_UART_Write_String
   363  07EB                     l707:
   364                           
   365                           ;uart_tx.c: 25:   _delay((unsigned long)((1000)*(4000000/4000.0)));
   366  07EB  3006               	movlw	6
   367  07EC  00F6               	movwf	??_main+2
   368  07ED  3013               	movlw	19
   369  07EE  00F5               	movwf	??_main+1
   370  07EF  30AD               	movlw	173
   371  07F0  00F4               	movwf	??_main
   372  07F1                     u67:
   373  07F1  0BF4               	decfsz	??_main,f
   374  07F2  2FF1               	goto	u67
   375  07F3  0BF5               	decfsz	??_main+1,f
   376  07F4  2FF1               	goto	u67
   377  07F5  0BF6               	decfsz	??_main+2,f
   378  07F6  2FF1               	goto	u67
   379  07F7  2FF8               	nop2
   380  07F8                     l29:	
   381                           ;uart_tx.c: 28:   while(1)
   382                           
   383  07F8                     l30:	
   384                           ;uart_tx.c: 29:   {;uart_tx.c: 31:   }
   385                           
   386  07F8  2FF8               	goto	l29
   387  07F9  120A  118A  2800   	ljmp	start
   388  07FC                     __end_of_main:
   389                           
   390                           	psect	text1
   391  0795                     __ptext1:	
   392 ;; *************** function _UART_Write_String *****************
   393 ;; Defined at:
   394 ;;		line 62 in file "uart_tx.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;  text            1    wreg     PTR unsigned char 
   397 ;;		 -> STR_3(7), STR_2(9), STR_1(3), 
   398 ;; Auto vars:     Size  Location     Type
   399 ;;  text            1    3[COMMON] PTR unsigned char 
   400 ;;		 -> STR_3(7), STR_2(9), STR_1(3), 
   401 ;;  i               2    1[COMMON] unsigned int 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   411 ;;      Params:         0       0       0       0       0
   412 ;;      Locals:         3       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0
   414 ;;      Totals:         3       0       0       0       0
   415 ;;Total ram usage:        3 bytes
   416 ;; Hardware stack levels used:    1
   417 ;; Hardware stack levels required when called:    1
   418 ;; This function calls:
   419 ;;		_UART_Write
   420 ;; This function is called by:
   421 ;;		_main
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           
   426                           ;psect for function _UART_Write_String
   427  0795                     _UART_Write_String:
   428                           
   429                           ;incstack = 0
   430                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   431                           ;UART_Write_String@text stored from wreg
   432  0795  00F3               	movwf	UART_Write_String@text
   433  0796                     l687:
   434                           
   435                           ;uart_tx.c: 62: void UART_Write_String(char *text);uart_tx.c: 63: {;uart_tx.c: 64:   uin
      +                          t16_t i;;uart_tx.c: 65:   for(i=0;text[i]!='\0';i++)
   436  0796  01F1               	clrf	UART_Write_String@i
   437  0797  01F2               	clrf	UART_Write_String@i+1
   438  0798  2FAC               	goto	l693
   439  0799                     l689:
   440                           
   441                           ;uart_tx.c: 66:     UART_Write(text[i]);
   442  0799  0871               	movf	UART_Write_String@i,w
   443  079A  0773               	addwf	UART_Write_String@text,w
   444  079B  0084               	movwf	4
   445  079C  120A  118A  2003  120A  118A  	fcall	stringdir
   446  07A1  120A  118A  277C  120A  118A  	fcall	_UART_Write
   447  07A6                     l691:
   448  07A6  3001               	movlw	1
   449  07A7  07F1               	addwf	UART_Write_String@i,f
   450  07A8  1803               	skipnc
   451  07A9  0AF2               	incf	UART_Write_String@i+1,f
   452  07AA  3000               	movlw	0
   453  07AB  07F2               	addwf	UART_Write_String@i+1,f
   454  07AC                     l693:
   455  07AC  0871               	movf	UART_Write_String@i,w
   456  07AD  0773               	addwf	UART_Write_String@text,w
   457  07AE  0084               	movwf	4
   458  07AF  120A  118A  2003  120A  118A  	fcall	stringdir
   459  07B4  3A00               	xorlw	0
   460  07B5  1D03               	skipz
   461  07B6  2FB8               	goto	u31
   462  07B7  2FB9               	goto	u30
   463  07B8                     u31:
   464  07B8  2F99               	goto	l689
   465  07B9                     u30:
   466  07B9                     l49:
   467  07B9  0008               	return
   468  07BA                     __end_of_UART_Write_String:
   469                           
   470                           	psect	text2
   471  077C                     __ptext2:	
   472 ;; *************** function _UART_Write *****************
   473 ;; Defined at:
   474 ;;		line 57 in file "uart_tx.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;  data            1    wreg     unsigned char 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  data            1    0[COMMON] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         1       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0
   491 ;;      Totals:         1       0       0       0       0
   492 ;;Total ram usage:        1 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_UART_Write_String
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _UART_Write
   503  077C                     _UART_Write:
   504                           
   505                           ;incstack = 0
   506                           ; Regs used in _UART_Write: [wreg]
   507                           ;UART_Write@data stored from wreg
   508  077C  00F0               	movwf	UART_Write@data
   509  077D                     l641:
   510  077D                     l40:	
   511                           ;uart_tx.c: 57: void UART_Write(uint8_t data);uart_tx.c: 58: {;uart_tx.c: 59:   while(!T
      +                          RMT);
   512                           
   513  077D  1683               	bsf	3,5	;RP0=1, select bank1
   514  077E  1303               	bcf	3,6	;RP1=0, select bank1
   515  077F  1C98               	btfss	24,1	;volatile
   516  0780  2F82               	goto	u11
   517  0781  2F83               	goto	u10
   518  0782                     u11:
   519  0782  2F7D               	goto	l40
   520  0783                     u10:
   521  0783                     l643:
   522                           
   523                           ;uart_tx.c: 60:   TXREG = data;
   524  0783  0870               	movf	UART_Write@data,w
   525  0784  1283               	bcf	3,5	;RP0=0, select bank0
   526  0785  1303               	bcf	3,6	;RP1=0, select bank0
   527  0786  0099               	movwf	25	;volatile
   528  0787                     l43:
   529  0787  0008               	return
   530  0788                     __end_of_UART_Write:
   531                           
   532                           	psect	text3
   533  0788                     __ptext3:	
   534 ;; *************** function _UART_TX_Init *****************
   535 ;; Defined at:
   536 ;;		line 36 in file "uart_tx.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;  x               2    0        unsigned int 
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, status,2
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   550 ;;      Params:         0       0       0       0       0
   551 ;;      Locals:         2       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0
   553 ;;      Totals:         2       0       0       0       0
   554 ;;Total ram usage:        2 bytes
   555 ;; Hardware stack levels used:    1
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           
   564                           ;psect for function _UART_TX_Init
   565  0788                     _UART_TX_Init:
   566  0788                     l645:	
   567                           ;incstack = 0
   568                           ; Regs used in _UART_TX_Init: [wreg+status,2]
   569                           
   570  0788                     l35:	
   571                           ;uart_tx.c: 44:   }
   572                           
   573  0788                     l653:	
   574                           ;uart_tx.c: 45:   if (x<=255)
   575                           
   576                           
   577                           ;uart_tx.c: 46:   {;uart_tx.c: 47:     SPBRG = x;
   578  0788  1683               	bsf	3,5	;RP0=1, select bank1
   579  0789  1303               	bcf	3,6	;RP1=0, select bank1
   580  078A  0199               	clrf	25	;volatile
   581  078B                     l655:
   582                           
   583                           ;uart_tx.c: 50:   SYNC = 0;
   584  078B  1218               	bcf	24,4	;volatile
   585  078C                     l657:
   586                           
   587                           ;uart_tx.c: 51:   SPEN = 1;
   588  078C  1283               	bcf	3,5	;RP0=0, select bank0
   589  078D  1303               	bcf	3,6	;RP1=0, select bank0
   590  078E  1798               	bsf	24,7	;volatile
   591  078F                     l659:
   592                           
   593                           ;uart_tx.c: 53:   TRISC6 = 1;
   594  078F  1683               	bsf	3,5	;RP0=1, select bank1
   595  0790  1303               	bcf	3,6	;RP1=0, select bank1
   596  0791  1707               	bsf	7,6	;volatile
   597  0792                     l661:
   598                           
   599                           ;uart_tx.c: 54:   TRISC7 = 1;
   600  0792  1787               	bsf	7,7	;volatile
   601  0793                     l663:
   602                           
   603                           ;uart_tx.c: 55:   TXEN = 1;
   604  0793  1698               	bsf	24,5	;volatile
   605  0794                     l37:
   606  0794  0008               	return
   607  0795                     __end_of_UART_TX_Init:
   608  007E                     btemp	set	126	;btemp
   609  007E                     wtemp0	set	126
   610                           
   611                           	psect	config
   612                           
   613                           ;Config register CONFIG @ 0x2007
   614                           ;	Oscillator Selection bits
   615                           ;	FOSC = XT, XT oscillator
   616                           ;	Watchdog Timer Enable bit
   617                           ;	WDTE = OFF, WDT disabled
   618                           ;	Power-up Timer Enable bit
   619                           ;	PWRTE = OFF, PWRT disabled
   620                           ;	Brown-out Reset Enable bit
   621                           ;	BOREN = ON, BOR enabled
   622                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   623                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   624                           ;	Data EEPROM Memory Code Protection bit
   625                           ;	CPD = OFF, Data EEPROM code protection off
   626                           ;	Flash Program Memory Write Enable bits
   627                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   628                           ;	In-Circuit Debugger Mode bit
   629                           ;	DEBUG = 0x1, unprogrammed default
   630                           ;	Flash Program Memory Code Protection bit
   631                           ;	CP = OFF, Code protection off
   632  2007                     	org	8199
   633  2007  3F79               	dw	16249

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Write_String@text	PTR unsigned char  size(1) Largest target is 9
		 -> STR_3(CODE[7]), STR_2(CODE[9]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_UART_Write_String
    _UART_Write_String->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     249
                                              4 COMMON     3     3      0
                       _UART_TX_Init
                  _UART_Write_String
 ---------------------------------------------------------------------------------
 (1) _UART_Write_String                                    3     3      0     204
                                              1 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TX_Init
   _UART_Write_String
     _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 16 13:15:38 2021

                         pc 0002                          l30 07F8                          l40 077D  
                        l35 0788                          l43 0787                          l37 0794  
                        l29 07F8                          l49 07B9                          u10 0783  
                        u11 0782                          u30 07B9                          u31 07B8  
                        u47 07CB                          u57 07DE                          u67 07F1  
                        fsr 0004  __size_of_UART_Write_String 0025                         l701 07D2  
                       l703 07D8                         l641 077D                         l705 07E5  
                       l643 0783                         l707 07EB                         l661 0792  
                       l653 0788                         l645 0788                         l663 0793  
                       l655 078B                         l657 078C                         l659 078F  
                       l691 07A6                         l693 07AC                         l687 0796  
                       l695 07BA                         l689 0799                         l697 07BF  
                       l699 07C5                         fsr0 0004                        STR_1 0019  
                      STR_2 0009                        STR_3 0012                        _BRGH 04C2  
                      _SPEN 00C7                        _TRMT 04C1                        _TXEN 04C5  
                      _SYNC 04C4                        _main 07BA                        btemp 007E  
                      start 0000                       ?_main 0070                       _SPBRG 0099  
                     _TXREG 0019                 ?_UART_Write 0070                       pclath 000A  
                     status 0003                       wtemp0 007E             __initialization 07FC  
              __end_of_main 07FC                      ??_main 0074                      _TRISC6 043E  
                    _TRISC7 043F         __size_of_UART_Write 000C     __end_of__initialization 07FC  
            __pcstackCOMMON 0070                  __pmaintext 07BA                ??_UART_Write 0070  
             ?_UART_TX_Init 0070                  __stringtab 0003          __end_of_UART_Write 0788  
                   __ptext1 0795                     __ptext2 077C                     __ptext3 0788  
            ??_UART_TX_Init 0070        end_of_initialization 07FC              UART_Write@data 0070  
     UART_Write_String@text 0073         start_initialization 07FC        __end_of_UART_TX_Init 0795  
                 ___latbits 0002                   __pstrings 0003                 __stringbase 0008  
     __size_of_UART_TX_Init 000D          __end_of__stringtab 0009           _UART_Write_String 0795  
        ?_UART_Write_String 0070                _UART_TX_Init 0788         ??_UART_Write_String 0071  
             __size_of_main 0042   __end_of_UART_Write_String 07BA                   stringcode 0003  
        UART_Write_String@i 0071                    stringdir 0003                    stringtab 0003  
                _UART_Write 077C  
